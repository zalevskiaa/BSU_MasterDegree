from panorama import find_homography
from skimage.transform import ProjectiveTransform
from numpy import array, mean
from numpy.linalg import norm

threshold = 1


def test_homography():
    src_keypoints = array([[166, 220],
                          [213, 151],
                          [178, 392],
                          [158.4, 199.2],
                          [213, 185],
                          [204, 253]])

    dest_keypoints = array([[165, 138],
                           [214, 66],
                           [178, 309],
                           [158.4, 116.4],
                           [214, 102],
                           [205, 171]])

    H = find_homography(src_keypoints, dest_keypoints)

    assert mean(norm(dest_keypoints - ProjectiveTransform(H)(src_keypoints), axis=1)) < threshold


def test_homography_2():
    src_keypoints = array([[1, 20],
                           [5, 5],
                           [15, 3],
                           [7, 14]])

    dest_keypoints = array([[11, 2],
                            [25, 3],
                            [16, 13],
                            [8, 2]])

    H = find_homography(src_keypoints, dest_keypoints)

    assert mean(norm(dest_keypoints - ProjectiveTransform(H)(src_keypoints), axis=1)) < threshold


def test_homography_3():
    src_keypoints = array([[169. , 305. ],
       [223. , 412. ],
       [172. , 299. ],
       [ 98. , 219. ],
       [ 87. , 182. ],
       [ 79. , 330. ],
       [239. , 250. ],
       [172. , 304. ],
       [100. , 331. ],
       [226. , 323. ],
       [225. , 331. ],
       [278. , 215. ],
       [229. , 334. ],
       [221. , 258. ],
       [175.2, 156. ],
       [ 98. , 329. ],
       [232. , 293. ],
       [172. , 155. ],
       [144. , 245. ],
       [162. , 262. ],
       [229. , 315. ],
       [169. , 192. ],
       [196. , 351. ],
       [280. , 214. ],
       [225. , 186. ],
       [111. , 191. ],
       [223.2, 411.6],
       [166. , 193. ],
       [170.4, 304.8],
       [220. , 322. ],
       [226. , 216. ],
       [233. , 245. ],
       [199. , 244. ],
       [104. , 211. ],
       [171.6, 154.8],
       [261. , 474. ],
       [ 70. , 216. ],
       [223. , 252. ],
       [129. , 243. ],
       [187. , 280. ],
       [144. , 244.8],
       [ 74. , 203. ],
       [179. , 291. ],
       [222. , 335. ],
       [226. , 192. ],
       [175. , 445. ],
       [226. , 245. ],
       [ 79. , 206. ],
       [ 47. , 293. ],
       [144. , 139. ],
       [225. , 206. ],
       [171.6, 355.2],
       [178.8, 116.4],
       [218. , 444. ]])

    dest_keypoints = array([[168. , 219. ],
       [221. , 323. ],
       [171. , 213. ],
       [ 97. , 133. ],
       [ 85. ,  95. ],
       [ 79. , 244. ],
       [239. , 163. ],
       [172. , 218. ],
       [100. , 245. ],
       [225. , 236. ],
       [224. , 244. ],
       [279. , 128. ],
       [228. , 247. ],
       [221. , 172. ],
       [175.2,  67.2],
       [ 98. , 243. ],
       [231. , 206. ],
       [172. ,  66. ],
       [143. , 159. ],
       [162. , 177. ],
       [228. , 228. ],
       [169. , 105. ],
       [195. , 264. ],
       [281. , 127. ],
       [226. ,  97. ],
       [110. , 104. ],
       [220.8, 322.8],
       [165. , 106. ],
       [169.2, 218.4],
       [219. , 235. ],
       [227. , 129. ],
       [233. , 159. ],
       [199. , 157. ],
       [103. , 125. ],
       [171.6,  66. ],
       [256. , 381. ],
       [ 68. , 130. ],
       [223. , 165. ],
       [128. , 157. ],
       [187. , 194. ],
       [144. , 158.4],
       [ 72. , 116. ],
       [178. , 205. ],
       [220. , 248. ],
       [227. , 104. ],
       [174. , 355. ],
       [226. , 158. ],
       [ 77. , 120. ],
       [ 46. , 208. ],
       [143. ,  49. ],
       [225. , 119. ],
       [170.4, 268.8],
       [178.8,  25.2],
       [215. , 353. ]])

    H = find_homography(src_keypoints, dest_keypoints)

    assert mean(norm(dest_keypoints - ProjectiveTransform(H)(src_keypoints), axis=1)) < threshold




